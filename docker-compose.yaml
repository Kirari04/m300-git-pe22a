services:
  caddy:
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./cfg/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
    networks:
      - m300_net
  
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./cfg/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - m300_net
    # depends_on:
    #   - cadvisor
    #   - node-exporter
    #   - mysqld-exporter
    #   - redis-exporter
    #   - caddy
    #   - nextcloud-exporter
    #   - minio

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./cfg/grafana-provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    networks:
      - m300_net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - m300_net

  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - m300_net


  portainer:
    image: portainer/portainer-ce:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - m300_net

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - m300_net
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 15s
      timeout: 20s
      retries: 10
  mysqld-exporter:
    image: prom/mysqld-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(mysql:3306)/${MYSQL_DATABASE}"
    networks:
      - m300_net
    volumes:
      - ./cfg/mysqld-exporter.cnf:/.my.cnf
    depends_on:
      mysql:
        condition: service_healthy

  redis:
    image: redis:latest
    restart: always
    networks:
      - m300_net
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 20s
      retries: 10
  redis-exporter:
    image: oliver006/redis_exporter:latest
    restart: unless-stopped
    environment:
      - REDIS_ADDR=redis:6379
    networks:
      - m300_net
    depends_on:
      redis:
        condition: service_healthy


  nextcloud:
    image: nextcloud:29
    restart: always
    environment:
      # Database configuration
      MYSQL_HOST: mysql
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      # Nextcloud configuration
      NEXTCLOUD_UPDATE: true
      NEXTCLOUD_INIT_HTACCESS: true
      NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_TRUSTED_DOMAINS}
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USER}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
      # Redis configuration
      REDIS_HOST: redis
      # Object storage configuration
      OBJECTSTORE_S3_HOST: minio
      OBJECTSTORE_S3_PORT: 9000
      OBJECTSTORE_S3_BUCKET: nextcloud-data
      OBJECTSTORE_S3_KEY: ${MINIO_ROOT_USER}
      OBJECTSTORE_S3_SECRET: ${MINIO_ROOT_PASSWORD}
      OBJECTSTORE_S3_SSL: false
      OBJECTSTORE_S3_URL: http://minio:9000
      OBJECTSTORE_S3_USEPATH_STYLE: true
      OBJECTSTORE_S3_AUTOCREATE: true
    volumes:
      - nextcloud_data:/var/www/html
    networks:
      - m300_net
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 5s
      timeout: 20s
      retries: 30
  nextcloud-exporter:
    image: xperimental/nextcloud-exporter:latest
    restart: unless-stopped
    environment:
      NEXTCLOUD_SERVER: "http://nextcloud"
      NEXTCLOUD_USERNAME: ${NEXTCLOUD_ADMIN_USER}
      NEXTCLOUD_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
    networks:
      - m300_net
    depends_on:
      nextcloud:
        condition: service_healthy


  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    networks:
      - m300_net
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_PROMETHEUS_AUTH_TYPE: "public" 
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 20s
      retries: 3

networks:
  m300_net: 
    driver: bridge
    name: m300_net

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  caddy_data:
    driver: local
  portainer_data:
    driver: local
  mysql_data:
    driver: local
  nextcloud_data:
    driver: local
  minio_data:
    driver: local